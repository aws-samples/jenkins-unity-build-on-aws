jenkins:
  numExecutors: 0
  slaveAgentPort: 50000
  systemMessage: Unity build pipeline
  agentProtocols:
    - JNLP4-connect
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: admin
          password: passw0rd
  globalNodeProperties:
    - envVars:
        env:
<% env.forEach(e => {
  %><%- 
[
`          - key: ${e}`,
`            value: \${${e}}`,
].join('\n') + '\n' %><%});%>
  nodes:
<% macAgents.forEach(agent => {
  %><%- 
[
`    - permanent:`,
`        labelString: mac`,
`        mode: EXCLUSIVE`,
`        name: '${agent.name}'`,
`        numExecutors: 1`,
`        remoteFS: '/Users/ec2-user/jenkins'`,
`        launcher:`,
`          ssh:`,
`            host: \${${agent.macHostEnv}}`,
`            port: 22`,
`            credentialsId: \${${agent.sshCredentialsIdEnv}}`,
`            launchTimeoutSeconds: 60`,
`            maxNumRetries: 10`,
`            retryWaitTime: 15`,
`            sshHostKeyVerificationStrategy: nonVerifyingKeyVerificationStrategy`,
].join('\n') + '\n' %><%});%>
  clouds:
<% ec2FleetAgents.forEach(agent => {
  %><%- 
[
`    - eC2Fleet:`,
`        addNodeOnlyIfRunning: false`,
`        alwaysReconnect: true`,
`        cloudStatusIntervalSec: 60`,
`        computerConnector:`,
`          sSHConnector:`,
`            port: 22`,
`            credentialsId: \${${agent.sshCredentialsIdEnv}}`,
`            launchTimeoutSeconds: ${agent.sshConnectTimeoutSeconds}`,
`            maxNumRetries: ${agent.sshConnectMaxNumRetries}`,
`            retryWaitTime: ${agent.sshConnectRetryWaitTime}`,
`            sshHostKeyVerificationStrategy: nonVerifyingKeyVerificationStrategy`,
...(agent.prefixStartSlaveCmd ? [
`            prefixStartSlaveCmd: '${agent.prefixStartSlaveCmd}'`
] : []),
...(agent.suffixStartSlaveCmd ? [
`            suffixStartSlaveCmd: '${agent.suffixStartSlaveCmd}'`,
] : []),
`        disableTaskResubmit: false`,
`        fleet: \${${agent.fleetAsgNameEnv}}`,
`        fsRoot: ${agent.fsRoot}`,
`        idleMinutes: 5`,
`        initOnlineCheckIntervalSec: 60`,
`        initOnlineTimeoutSec: 60`,
`        labelString: '${agent.label}'`,
`        maxSize: ${agent.fleetMaxSize}`,
`        maxTotalUses: -1`,
`        minSize: ${agent.fleetMinSize}`,
`        minSpareSize: 0`,
`        name: '${agent.name}'`,
`        noDelayProvision: false`,
`        numExecutors: 1`,
`        privateIpUsed: true`,
`        region: \${AWS_REGION}`,
`        restrictUsage: false`,
`        scaleExecutorsByWeight: false`,
].join('\n') + '\n' %><%});%>
aws:
  s3:
    container: ${ARTIFACT_BUCKET_NAME}
    disableSessionToken: false
    prefix: 'artifacts/'
    useHttp: false
    usePathStyleUrl: false
    useTransferAcceleration: false
unclassified:
  location:
    url: ${JENKINS_URL}
    adminAddress: 'example@example.com'
  artifactManager:
    artifactManagerFactories:
      - jclouds:
          provider: 's3'
  globalItemStorage:
    storage:
      s3:
        bucketName: ${ARTIFACT_BUCKET_NAME}
        region: ${AWS_REGION}
  timestamper:
    allPipelines: true
